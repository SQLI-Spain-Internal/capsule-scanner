name: Android CI

on:
  push:
    branches:
      - feature/add_workflows
  pull_request:
    branches:
      - feature/add_workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup JDK 
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # O 'zulu' segÃºn tu preferencia
          java-version: '17' 

      # Install Android Command Line Tools
      - name: Download Android SDK Commandline Tools
        run: |
          mkdir -p "$HOME/android-sdk/cmdline-tools"
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip sdk-tools.zip -d "$HOME/android-sdk/cmdline-tools"
          mv "$HOME/android-sdk/cmdline-tools/cmdline-tools" "$HOME/android-sdk/cmdline-tools/latest"
        shell: bash

      # Setup SDK Manager in path
      - name: Set up Android SDK environment
        run: |
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_ENV
          echo "export PATH=$PATH:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
        shell: bash

      # Install Android SDK
      - name: Install Android SDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"
        shell: bash
      
      # Get API key 
      - name: Set up OpenAI API Key
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} 
        run: echo "API key is set."          

      # Compile
      - name: Build with Gradle
        run: ./gradlew build

      # Store APK artifact
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: app/build/outputs/apk/debug/CapsuleScanner-debug.apk        
